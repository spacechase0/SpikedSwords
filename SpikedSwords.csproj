<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Condition="$(OS) != 'Windows_NT' AND Exists('$(HOME)\mytimeatportia.targets')" Project="$(HOME)\mytimeatportia.targets" />
  <Import Condition="$(OS) == 'Windows_NT' AND Exists('$(USERPROFILE)\mytimeatportia.targets')" Project="$(USERPROFILE)\mytimeatportia.targets" />
  <PropertyGroup>
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\My Time at Portia</GamePath>
    <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\My Time at Portia</GamePath>
    <GamePath Condition="!Exists('$(GamePath)') AND '$(OS)' == 'Windows_NT'">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 666140', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{14BFB26A-FCBD-4C61-99CA-EB42B88AB718}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SpikedSwords</RootNamespace>
    <AssemblyName>SpikedSwords</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="0Harmony, Version=1.2.0.1, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\Lib.Harmony.1.2.0.1\lib\net35\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(GamePath)\Portia_Data\Managed\Assembly-CSharp.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(GamePath)\Portia_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="System.Core">
      <HintPath>$(GamePath)\Portia_Data\Managed\System.Core.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="MiniModLoader">
      <HintPath>$(GamePath)\MiniModLoader.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Pathea.CompoundSystem.CompoundManager.cs" />
    <Compile Include="Pathea.ItemSystem.ItemDataMgr.cs" />
    <Compile Include="Pathea.StoreNs.StoreProductData.cs" />
    <Compile Include="Pathea.StoreNs.StoreData.cs" />
    <Compile Include="Mod.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="manifest.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="BeforeBuild">
    <Error Condition="!Exists('$(GamePath)')" Text="The mod build package can't find your game folder. You can specify where to find it; see https://smapi.io/buildmsg/game-path." />
    <Error Condition="!Exists('$(GamePath)\Portia.exe')" Text="The mod build package found a game folder at $(GamePath), but it doesn't contain the Portia.exe file. If this folder is invalid, delete it and the package will autodetect another game install path." />
    <Error Condition="!Exists('$(GamePath)\MiniModLoader.dll')" Text="The mod build package found a game folder at $(GamePath), but it doesn't contain the mod loader. You need to install the mod loader before building the mod." />
  </Target>
  <Target Name="AfterBuild">
    <CallTarget Targets="CopyFiles" />
  </Target>
  <Target Name="CopyFiles">
    <Copy SourceFiles="$(TargetDir)\$(TargetName).dll" DestinationFolder="$(GamePath)\Mods\$(TargetName)" />
    <Copy SourceFiles="$(TargetDir)\$(TargetName).pdb" DestinationFolder="$(GamePath)\Mods\$(TargetName)" />
    <Copy SourceFiles="$(TargetDir)\manifest.json" DestinationFolder="$(GamePath)\Mods\$(TargetName)" />
  </Target>
  <PropertyGroup>
    <StartAction>Program</StartAction>
    <StartProgram>$(GamePath)\Portia.exe</StartProgram>
    <StartWorkingDirectory>$(GamePath)</StartWorkingDirectory>
  </PropertyGroup>
</Project>